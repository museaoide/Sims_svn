dim(shat)
str(shat)
G*shat
shat
kfout <- kf(y,H,shat,sig,G,M)
kfout
sig
kfout <- kf(y,H,shat,sig,G,M)
kfout
shat
sig
str(kfout)
ksmout <- ksmooth(shat,sig,shatnew,signew,G,crossprod(M))
ksmout <- ksmooth(shat,sig,kfout$shatnew,kfout$signew,G,crossprod(M))
dim(A)
dim(btt)
t(c(1,2,3))
t(t(c(1,2,3)))
ksmout <- ksmooth(shat,sig,kfout$shatnew,kfout$signew,G,crossprod(M))
ksmout
eig(G)
eigen(G)
svd(G)
ksmout <- ksmooth(shat,sig,kfout$shatnew,kfout$signew,G,crossprod(M))
ksmoout
ksmout
ksmout <- ksmooth(shat,sig,kfout$shatnew,kfout$signew,G,crossprod(M))
ksmout
AS <- A %*% sig
AS <- G %*% sig
ksmout <- ksmooth(shat,sig,kfout$shatnew,kfout$signew,G,M %*% t(M))
ksmout
D <- matrix(c(.5,.3,-.7,.8),2)
D %*% D %*% c(2,-2)
a <- matrix(c(1, .5, 1/3, -1, -.5, -.25, -1, sqrt(2*pi), 1+sqrt(pi/2)),3)
a
solve(a, c(0,1,1)
)
cf <- .Last.value
pdf <- function(x) {ifelse(x < 1, cf[1]*x +cf[2]*x^2, exp(-.5*(x-1)^2/2)*cf[3]}
pdf <- function(x) {ifelse(x < 1, cf[1]*x +cf[2]*x^2, exp(-.5*(x-1)^2/2)*cf[3])}
x <- seq(0,4, length=200)
plot(x, pdf(x))
pdf <- function(x) {ifelse(x < 1, cf[1]*x -cf[2]*x^2, exp(-.5*(x-1)^2/2)*cf[3])}
plot(x, pdf(x))
x <- rnorm(10)+3
x <- min(x,2)
x
x <- rnorm(10)+3
x
x <- pmin(x,2)
x
x <- rnorm(10)+3
x <- pmin(x,2)
x
x <- rnorm(20)
x
x <- rnorm(20)+3
x <- rnorm(20)+3
x
ifelse(x > 2, 'yes', 'no')
lh <- function(mu,x) ifelse(x < 2, dnorm(x-mu), 1-pnorm(2-mu))
mu <- seq(0,6, length=200)
lhv <- vector("numeric",200)
for (im in 1:200) lhv[im] <- lh(mu[im],x)
warnings()
lh <- function(mu,x) sum(ifelse(x < 2, log(dnorm(x-mu)), log(1-pnorm(2-mu))))
for (im in 1:200) lhv[im] <- lh(mu[im],x)
plot(mu, lhv)
plot(mu, exp(lhv+12))
n
